//@version=5
indicator(title="Multi Indicator Stats", shorttitle="MultiStat", timeframe="", timeframe_gaps=true)
//Bollinger Bands
length = input.int(20, minval=1)
src = input(close, title="Source")
mult = input.float(2.0, minval=0.001, maxval=50, title="StdDev")
basis = ta.sma(src, length)
dev = mult * ta.stdev(src, length)
upper = basis + dev
lower = basis - dev
offset = input.int(0, "Offset", minval = -500, maxval = 500)
//plot(basis, "Basis", color=#FF6D00, offset = offset)
//p1 = plot(upper, "Upper", color=#2962FF, offset = offset)
//p2 = plot(lower, "Lower", color=#2962FF, offset = offset)

//IFTCCV2
ccilength=input(5, "CCI Length")
wmalength=input(9, title="Smoothing length")
v13=0.1*(ta.cci(close, ccilength)/4)
v23=ta.wma(v13, wmalength)
INVCCIV2=(math.exp(2*v23)-1)/(math.exp(2*v23)+1)
//plot(INVCCIV2, color=color.red, linewidth=2, title="CCI")

//RSI
rsiLengthInput = input.int(14, minval=1, title="RSI Length", group="RSI Settings")
rsiSourceInput = input.source(close, "RSI Source", group="RSI Settings")
up = ta.rma(math.max(ta.change(rsiSourceInput), 0), rsiLengthInput)
down = ta.rma(-math.min(ta.change(rsiSourceInput), 0), rsiLengthInput)
rsi = down == 0 ? 100 : up == 0 ? 0 : 100 - (100 / (1 + up / down))
//plot(rsi, "RSI", color=#7E57C2)

//MACD
fast_length = input(title="Fast Length", defval=12)
slow_length = input(title="Slow Length", defval=26)
macdSourceInput = input(title="MacD Source", defval=close)
signal_length = input.int(title="Signal Smoothing",  minval = 1, maxval = 50, defval = 9)
sma_source = input.string(title="Oscillator MA Type",  defval="EMA", options=["SMA", "EMA"])
sma_signal = input.string(title="Signal Line MA Type", defval="EMA", options=["SMA", "EMA"])
// Calculating
fast_ma = sma_source == "SMA" ? ta.sma(macdSourceInput, fast_length) : ta.ema(macdSourceInput, fast_length)
slow_ma = sma_source == "SMA" ? ta.sma(macdSourceInput, slow_length) : ta.ema(macdSourceInput, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == "SMA" ? ta.sma(macd, signal_length) : ta.ema(macd, signal_length)
hist = macd - signal
// Plot colors
col_macd = input(#2962FF, "MACD Line  ", group="Color Settings", inline="MACD")
col_signal = input(#FF6D00, "Signal Line  ", group="Color Settings", inline="Signal")
col_grow_above = input(#26A69A, "Above   Grow", group="Histogram", inline="Above")
col_fall_above = input(#B2DFDB, "Fall", group="Histogram", inline="Above")
col_grow_below = input(#FFCDD2, "Below Grow", group="Histogram", inline="Below")
col_fall_below = input(#FF5252, "Fall", group="Histogram", inline="Below")
//hline(0, "Zero Line", color=color.new(#787B86, 50))
//plot(hist, title="Histogram", style=plot.style_columns, color=(hist>=0 ? (hist[1] < hist ? col_grow_above : col_fall_above) : (hist[1] < hist ? col_grow_below : col_fall_below)))
//plot(macd, title="MACD", color=col_macd)
//plot(signal, title="Signal", color=col_signal)

//Stoch RSI
smoothK = input.int(3, "K", minval=1)
smoothD = input.int(3, "D", minval=1)
lengthRSI = input.int(14, "RSI Length", minval=1)
lengthStoch = input.int(14, "Stochastic Length", minval=1)
stochSourceInput = input(close, title="RSI Source")
rsi1 = ta.rsi(stochSourceInput, lengthRSI)
k = ta.sma(ta.stoch(rsi1, rsi1, rsi1, lengthStoch), smoothK)
d = ta.sma(k, smoothD)
//plot(k, "K", color=#2962FF)
//plot(d, "D", color=#FF6D00)
//h0 = hline(80, "Upper Band", color=#787B86)
//hline(50, "Middle Band", color=color.new(#787B86, 50))
//h1 = hline(20, "Lower Band", color=#787B86)
//fill(h0, h1, color=color.rgb(33, 150, 243, 90), title="Background")

//WaveTrend
n1 = input(10, "Channel Length")
n2 = input(21, "Average Length")
obLevel1 = input(60, "Over Bought Level 1")
obLevel2 = input(53, "Over Bought Level 2")
osLevel1 = input(-60, "Over Sold Level 1")
osLevel2 = input(-53, "Over Sold Level 2")
 
ap = hlc3 
esa = ta.ema(ap, n1)
d2 = ta.ema(math.abs(ap - esa), n1)
ci = (ap - esa) / (0.015 * d2)
tci = ta.ema(ci, n2)
 
wt1 = tci
wt2 = ta.sma(wt1,4)

//plot(0, color=color.gray)
//plot(obLevel1, color=color.red)
//plot(osLevel1, color=color.green)
//plot(obLevel2, color=color.red)
//plot(osLevel2, color=color.green)

//plot(wt1, color=color.green)
//plot(wt2, color=color.red)
//plot(wt1-wt2, color=color.blue, style=area, transp=80)
//plot(crossover(wt1, wt2) ? wt2 : na, color = color.black , style = circles, linewidth = 3)
//plot(crossover(wt1, wt2) ? wt2 : na, color = (wt2 - wt1 > 0 ? red : lime) , style = circles, linewidth = 2)
//barcolor(cross(wt1, wt2) ? (wt2 - wt1 > 0 ? aqua : yellow) : na)

// close < lower and rsi < 20 or rsi < 30 and fast_ma > slow_ma and macd > signal and k > d and wt1 > wt2
bullish =  INVCCIV2 > 0.5
plot(10, "BB", color=basis < close ? color.lime: color.red, linewidth = 10)
plot(9, "RSI", color=rsi > 40 ? color.lime: color.red, linewidth = 10)
plot(8, "MACD", color=fast_ma > slow_ma ? color.lime: color.red, linewidth = 10)
plot(7, "StochRSI", color=k > d ? color.lime: color.red, linewidth = 10)
plot(6, "WT", color=wt1 > wt2 ? color.lime: color.red, linewidth = 10)
plot(5, "INVCCIV2", color=INVCCIV2 > 0.5 ? color.lime: color.red, linewidth = 10)