// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Author: ©erolmutlu

//@version=5
indicator("MG Hisse Tarama V1 [erolmutlu]", overlay=false)

//************************************************************************************************************
// Parameter
//************************************************************************************************************
screenSet   =       input.bool(false, "═════════ Tarama Ayarlari ════════")
showTable =         input.bool(true, 'Tablo1 Goster', group = "Tablo1 Ozellikleri")
i_tableypos =       input.string("Top", "Y", options = ["Top", "Middle", "Bottom"], inline = "13",  group= "Tablo1 Ozellikleri")
i_tablexpos =       input.string("Right", "X", options = ["Right","Center", "Left"], inline = "13",  group = "Tablo1 Ozellikleri")
showTable2 =         input.bool(true, 'Tablo2 Goster', group = "Tablo2 Ozellikleri")
i_tableypos2 =       input.string("Top", "Y", options = ["Top", "Middle", "Bottom"], inline = "13",  group= "Tablo2 Ozellikleri")
i_tablexpos2 =       input.string("Left", "X", options = ["Right","Center", "Left"], inline = "13",  group = "Tablo2 Ozellikleri")
tableTextSize =     input.string("Small", "Tablo Boyu", options = ["Auto", "Tiny", "Small","Normal","Large","Huge"], inline = '14', group = "Tablo Ozellikleri")
tableTextColor =    input.color(color.white, 'Tablo Text Rengi', inline = '14', group = "Tablo Ozellikleri")
tableHeaderColor =  input.color(color.white, 'Başlik Text Rengi', inline = '15', group = "Tablo Ozellikleri")
tableBgColor =      input.color(color.rgb(82, 77, 77, 67), 'Tablo Arkaplan Rengi', inline = '15', group = "Tablo Ozellikleri")
bullColor =         input.color(color.green, 'Long Rengi', inline = '16', group = "Tablo Ozellikleri")
bearColor =         input.color(color.red, 'Short Rengi', inline = '16', group = "Tablo Ozellikleri")
boolMA1 =           input.bool(true, 'MA1', inline = '1', group = "Tablo Ozellikleri")
boolMA2 =           input.bool(true, 'MA2', inline = '1', group = "Tablo Ozellikleri")
boolMA3 =           input.bool(true, 'MA3', inline = '1', group = "Tablo Ozellikleri")
boolMG1 =           input.bool(true, 'MG1', inline = '1', group = "Tablo Ozellikleri")
boolMG2 =           input.bool(true, 'MG2', inline = '1', group = "Tablo Ozellikleri")
boolMG3 =           input.bool(true, 'MG3', inline = '1', group = "Tablo Ozellikleri")
boolMG4 =           input.bool(true, 'MG4', inline = '1', group = "Tablo Ozellikleri")
boolRSI =           input.bool(true, 'RSI', inline = '1', group = "Tablo Ozellikleri")
boolMACD =           input.bool(true, 'MACD', inline = '1', group = "Tablo Ozellikleri")

screenList  = input.bool(false, "═════════ Tarama yapilacak enstrumanlar ════════")
asset_01 = input.symbol(title='Asset 01', defval='BIST:XU100', group = "Tablo1 Listesi")
asset_02 = input.symbol(title='Asset 02', defval='BIST:AKBNK', group = "Tablo1 Listesi")
asset_03 = input.symbol(title='Asset 03', defval='BIST:ALARK', group = "Tablo1 Listesi")
asset_04 = input.symbol(title='Asset 04', defval='BIST:ARCLK', group = "Tablo1 Listesi")
asset_05 = input.symbol(title='Asset 05', defval='BIST:ASELS', group = "Tablo1 Listesi")
asset_06 = input.symbol(title='Asset 06', defval='BIST:ASTOR', group = "Tablo1 Listesi")
asset_07 = input.symbol(title='Asset 07', defval='BIST:BIMAS', group = "Tablo1 Listesi")
asset_08 = input.symbol(title='Asset 08', defval='BIST:EKGYO', group = "Tablo1 Listesi")
asset_09 = input.symbol(title='Asset 09', defval='BIST:ENKAI', group = "Tablo1 Listesi")
asset_10 = input.symbol(title='Asset 10', defval='BIST:EREGL', group = "Tablo1 Listesi")
asset_11 = input.symbol(title='Asset 11', defval='BIST:FROTO', group = "Tablo1 Listesi")
asset_12 = input.symbol(title='Asset 12', defval='BIST:GARAN', group = "Tablo1 Listesi")
asset_13 = input.symbol(title='Asset 13', defval='BIST:GUBRF', group = "Tablo1 Listesi")
asset_14 = input.symbol(title='Asset 14', defval='BIST:HEKTS', group = "Tablo1 Listesi")
asset_15 = input.symbol(title='Asset 15', defval='BIST:ISCTR', group = "Tablo1 Listesi")
asset_16 = input.symbol(title='Asset 16', defval='BIST:KCHOL', group = "Tablo1 Listesi")
asset_17 = input.symbol(title='Asset 17', defval='BIST:KONTR', group = "Tablo1 Listesi")
asset_18 = input.symbol(title='Asset 18', defval='BIST:KOZAL', group = "Tablo1 Listesi")
asset_19 = input.symbol(title='Asset 19', defval='BIST:KRDMD', group = "Tablo1 Listesi")
asset_20 = input.symbol(title='Asset 20', defval='BIST:ODAS', group = "Tablo1 Listesi")
asset_21 = input.symbol(title='Asset 21', defval='BIST:OYAKC', group = "Tablo2 Listesi")
asset_22 = input.symbol(title='Asset 22', defval='BIST:PETKM', group = "Tablo2 Listesi")
asset_23 = input.symbol(title='Asset 23', defval='BIST:PGSUS', group = "Tablo2 Listesi")
asset_24 = input.symbol(title='Asset 24', defval='BIST:SAHOL', group = "Tablo2 Listesi")
asset_25 = input.symbol(title='Asset 25', defval='BIST:SASA', group = "Tablo2 Listesi")
asset_26 = input.symbol(title='Asset 26', defval='BIST:SISE', group = "Tablo2 Listesi")
asset_27 = input.symbol(title='Asset 27', defval='BIST:TCELL', group = "Tablo2 Listesi")
asset_28 = input.symbol(title='Asset 28', defval='BIST:THYAO', group = "Tablo2 Listesi")
asset_29 = input.symbol(title='Asset 29', defval='BIST:TOASO', group = "Tablo2 Listesi")
asset_30 = input.symbol(title='Asset 30', defval='BIST:TUPRS', group = "Tablo2 Listesi")
asset_31 = input.symbol(title='Asset 31', defval='BIST:YKBNK', group = "Tablo2 Listesi")
asset_32 = input.symbol(title='Asset 32', defval='BIST:ALTIN', group = "Tablo2 Listesi")
asset_33 = input.symbol(title='Asset 33', defval='BIST:GLDTR', group = "Tablo2 Listesi")
asset_34 = input.symbol(title='Asset 34', defval='BIST:GLDTR', group = "Tablo2 Listesi")
asset_35 = input.symbol(title='Asset 35', defval='BIST:GLDTR', group = "Tablo2 Listesi")
asset_36 = input.symbol(title='Asset 36', defval='BIST:GLDTR', group = "Tablo2 Listesi")
asset_37 = input.symbol(title='Asset 37', defval='BIST:GLDTR', group = "Tablo2 Listesi")
asset_38 = input.symbol(title='Asset 38', defval='BIST:GLDTR', group = "Tablo2 Listesi")
asset_39 = input.symbol(title='Asset 39', defval='BIST:GLDTR', group = "Tablo2 Listesi")
asset_40 = input.symbol(title='Asset 40', defval='BIST:GLDTR', group = "Tablo2 Listesi")

//Table
var table screener = table.new(str.lower(i_tableypos) + "_" + str.lower(i_tablexpos), 15, 50, color.new(color.white,100), color.black, 1, color.black, 1)
//Table
var table screener2 = table.new(str.lower(i_tableypos2) + "_" + str.lower(i_tablexpos2), 15, 50, color.new(color.white,100), color.black, 1, color.black, 1)
// methods
method splitter(string sym) =>
    array.get(str.split(sym, ':'),1)

method textsize(string this) =>
    switch this
        'Auto' => size.auto
        'Tiny' => size.tiny
        'Normal' => size.normal
        'Small' => size.small
        'Large' => size.large
        'Huge' => size.huge

method data(string sym)=>
    WMA9 = ta.wma(close, 9)
    WMA15 = ta.wma(close, 15)
    kijunsen = (ta.highest (high, 20) + ta.lowest (low, 20)) / 2
    [macdLine_mtf, signalLine_mtf, histLine] = ta.macd(close, 12, 26, 9)
    macd_mtf = macdLine_mtf > signalLine_mtf ? 1 : 0

    rsi = ta.rsi(close, 14)
    //rsima = request.security(sym, "W", ta.ema(ta.rsi(close, 14), 14))
    //rsi_mtf = rsi[1] < rsima[1] and rsi > rsima ? 1 : 0
    rsi50_mtf = rsi > 50 ? 1 : 0

    T1 = WMA9[1] * 1.15
    T2 = WMA9[1] * 1.30
    T3 = WMA9[1] * 1.40
    T4 = WMA9[1] * 1.50
    mgrenk0 = WMA9 > WMA15 and close > WMA9 and close > kijunsen ? color.lime : (close < WMA9 and close > kijunsen) or (close < kijunsen and close > WMA15) or (WMA9 < WMA15 and close > WMA15) or (close < kijunsen and close < WMA15 and WMA9 >= WMA15) ? color.purple : close < kijunsen and WMA9 < WMA15 and close < WMA15 ? color.red : na
    price0 = close
    MA10 = WMA9[1]
    MA20 = WMA15[1]
    MA30 = kijunsen
    MG10 = T1
    MG20 = T2
    MG30 = T3
    MG40 = T4
    RSI0 = rsi50_mtf
    MACD0 = macd_mtf
    [mgrenk, price, MA1, MA2, MA3, MG1, MG2, MG3, MG4, RSI, MACD] = request.security(sym, "W", [mgrenk0, price0, MA10, MA20, MA30, MG10, MG20, MG30, MG40, RSI0, MACD0], lookahead=barmerge.lookahead_on)
    
//get the data for symbols
[mgrenk_1, price_1, MA1_1, MA2_1, MA3_1, MG1_1, MG2_1, MG3_1, MG4_1, RSI_1, MACD_1] = asset_01.data()
[mgrenk_2, price_2, MA1_2, MA2_2, MA3_2, MG1_2, MG2_2, MG3_2, MG4_2, RSI_2, MACD_2] = asset_02.data()
[mgrenk_3, price_3, MA1_3, MA2_3, MA3_3, MG1_3, MG2_3, MG3_3, MG4_3, RSI_3, MACD_3] = asset_03.data()
[mgrenk_4, price_4, MA1_4, MA2_4, MA3_4, MG1_4, MG2_4, MG3_4, MG4_4, RSI_4, MACD_4] = asset_04.data()
[mgrenk_5, price_5, MA1_5, MA2_5, MA3_5, MG1_5, MG2_5, MG3_5, MG4_5, RSI_5, MACD_5] = asset_05.data()
[mgrenk_6, price_6, MA1_6, MA2_6, MA3_6, MG1_6, MG2_6, MG3_6, MG4_6, RSI_6, MACD_6] = asset_06.data()
[mgrenk_7, price_7, MA1_7, MA2_7, MA3_7, MG1_7, MG2_7, MG3_7, MG4_7, RSI_7, MACD_7] = asset_07.data()
[mgrenk_8, price_8, MA1_8, MA2_8, MA3_8, MG1_8, MG2_8, MG3_8, MG4_8, RSI_8, MACD_8] = asset_08.data()
[mgrenk_9, price_9, MA1_9, MA2_9, MA3_9, MG1_9, MG2_9, MG3_9, MG4_9, RSI_9, MACD_9] = asset_09.data()
[mgrenk_10, price_10, MA1_10, MA2_10, MA3_10, MG1_10, MG2_10, MG3_10, MG4_10, RSI_10, MACD_10] = asset_10.data()
[mgrenk_11, price_11, MA1_11, MA2_11, MA3_11, MG1_11, MG2_11, MG3_11, MG4_11, RSI_11, MACD_11] = asset_11.data()
[mgrenk_12, price_12, MA1_12, MA2_12, MA3_12, MG1_12, MG2_12, MG3_12, MG4_12, RSI_12, MACD_12] = asset_12.data()
[mgrenk_13, price_13, MA1_13, MA2_13, MA3_13, MG1_13, MG2_13, MG3_13, MG4_13, RSI_13, MACD_13] = asset_13.data()
[mgrenk_14, price_14, MA1_14, MA2_14, MA3_14, MG1_14, MG2_14, MG3_14, MG4_14, RSI_14, MACD_14] = asset_14.data()
[mgrenk_15, price_15, MA1_15, MA2_15, MA3_15, MG1_15, MG2_15, MG3_15, MG4_15, RSI_15, MACD_15] = asset_15.data()
[mgrenk_16, price_16, MA1_16, MA2_16, MA3_16, MG1_16, MG2_16, MG3_16, MG4_16, RSI_16, MACD_16] = asset_16.data()
[mgrenk_17, price_17, MA1_17, MA2_17, MA3_17, MG1_17, MG2_17, MG3_17, MG4_17, RSI_17, MACD_17] = asset_17.data()
[mgrenk_18, price_18, MA1_18, MA2_18, MA3_18, MG1_18, MG2_18, MG3_18, MG4_18, RSI_18, MACD_18] = asset_18.data()
[mgrenk_19, price_19, MA1_19, MA2_19, MA3_19, MG1_19, MG2_19, MG3_19, MG4_19, RSI_19, MACD_19] = asset_19.data()
[mgrenk_20, price_20, MA1_20, MA2_20, MA3_20, MG1_20, MG2_20, MG3_20, MG4_20, RSI_20, MACD_20] = asset_20.data()
[mgrenk_21, price_21, MA1_21, MA2_21, MA3_21, MG1_21, MG2_21, MG3_21, MG4_21, RSI_21, MACD_21] = asset_21.data()
[mgrenk_22, price_22, MA1_22, MA2_22, MA3_22, MG1_22, MG2_22, MG3_22, MG4_22, RSI_22, MACD_22] = asset_22.data()
[mgrenk_23, price_23, MA1_23, MA2_23, MA3_23, MG1_23, MG2_23, MG3_23, MG4_23, RSI_23, MACD_23] = asset_23.data()
[mgrenk_24, price_24, MA1_24, MA2_24, MA3_24, MG1_24, MG2_24, MG3_24, MG4_24, RSI_24, MACD_24] = asset_24.data()
[mgrenk_25, price_25, MA1_25, MA2_25, MA3_25, MG1_25, MG2_25, MG3_25, MG4_25, RSI_25, MACD_25] = asset_25.data()
[mgrenk_26, price_26, MA1_26, MA2_26, MA3_26, MG1_26, MG2_26, MG3_26, MG4_26, RSI_26, MACD_26] = asset_26.data()
[mgrenk_27, price_27, MA1_27, MA2_27, MA3_27, MG1_27, MG2_27, MG3_27, MG4_27, RSI_27, MACD_27] = asset_27.data()
[mgrenk_28, price_28, MA1_28, MA2_28, MA3_28, MG1_28, MG2_28, MG3_28, MG4_28, RSI_28, MACD_28] = asset_28.data()
[mgrenk_29, price_29, MA1_29, MA2_29, MA3_29, MG1_29, MG2_29, MG3_29, MG4_29, RSI_29, MACD_29] = asset_29.data()
[mgrenk_30, price_30, MA1_30, MA2_30, MA3_30, MG1_30, MG2_30, MG3_30, MG4_30, RSI_30, MACD_30] = asset_30.data()
[mgrenk_31, price_31, MA1_31, MA2_31, MA3_31, MG1_31, MG2_31, MG3_31, MG4_31, RSI_31, MACD_31] = asset_31.data()
[mgrenk_32, price_32, MA1_32, MA2_32, MA3_32, MG1_32, MG2_32, MG3_32, MG4_32, RSI_32, MACD_32] = asset_32.data()
[mgrenk_33, price_33, MA1_33, MA2_33, MA3_33, MG1_33, MG2_33, MG3_33, MG4_33, RSI_33, MACD_33] = asset_33.data()
[mgrenk_34, price_34, MA1_34, MA2_34, MA3_34, MG1_34, MG2_34, MG3_34, MG4_34, RSI_34, MACD_34] = asset_34.data()
[mgrenk_35, price_35, MA1_35, MA2_35, MA3_35, MG1_35, MG2_35, MG3_35, MG4_35, RSI_35, MACD_35] = asset_35.data()
[mgrenk_36, price_36, MA1_36, MA2_36, MA3_36, MG1_36, MG2_36, MG3_36, MG4_36, RSI_36, MACD_36] = asset_36.data()
[mgrenk_37, price_37, MA1_37, MA2_37, MA3_37, MG1_37, MG2_37, MG3_37, MG4_37, RSI_37, MACD_37] = asset_37.data()
[mgrenk_38, price_38, MA1_38, MA2_38, MA3_38, MG1_38, MG2_38, MG3_38, MG4_38, RSI_38, MACD_38] = asset_38.data()
[mgrenk_39, price_39, MA1_39, MA2_39, MA3_39, MG1_39, MG2_39, MG3_39, MG4_39, RSI_39, MACD_39] = asset_39.data()
[mgrenk_40, price_40, MA1_40, MA2_40, MA3_40, MG1_40, MG2_40, MG3_40, MG4_40, RSI_40, MACD_40] = asset_40.data()

// plot the table
if barstate.islast and showTable
//headers
    table.cell(screener, 0, 0, 'Symbol', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = tableBgColor)
    table.cell(screener, 1, 0, 'Price', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = tableBgColor)
    if boolMA1
        table.cell(screener, 2, 0, 'MA1', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = color.lime)
    if boolMA2
        table.cell(screener, 3, 0, 'MA2', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = color.orange)
    if boolMA3
        table.cell(screener, 4, 0, 'MA3', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = color.red)
    if boolMG1    
        table.cell(screener, 5, 0, 'MG1', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = color.rgb(102, 98, 98))
    if boolMG2
        table.cell(screener, 6, 0, 'MG2', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = color.red)
    if boolMG3
        table.cell(screener, 7, 0, 'MG3', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = color.orange)
    if boolMG4
        table.cell(screener, 8, 0, 'MG4', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = color.purple)
    if boolRSI
        table.cell(screener, 9, 0, 'RSI', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = tableBgColor)
    if boolMACD
        table.cell(screener, 10, 0, 'MACD', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = tableBgColor)
    //symbols
    table.cell(screener, 0, 1, str.tostring(asset_01.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_1)
    table.cell(screener, 0, 2, str.tostring(asset_02.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_2)
    table.cell(screener, 0, 3, str.tostring(asset_03.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_3)
    table.cell(screener, 0, 4, str.tostring(asset_04.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_4)
    table.cell(screener, 0, 5, str.tostring(asset_05.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_5)
    table.cell(screener, 0, 6, str.tostring(asset_06.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_6)
    table.cell(screener, 0, 7, str.tostring(asset_07.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_7)
    table.cell(screener, 0, 8, str.tostring(asset_08.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_8)
    table.cell(screener, 0, 9, str.tostring(asset_09.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_9)
    table.cell(screener, 0, 10, str.tostring(asset_10.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_10)
    table.cell(screener, 0, 11, str.tostring(asset_11.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_11)
    table.cell(screener, 0, 12, str.tostring(asset_12.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_12)
    table.cell(screener, 0, 13, str.tostring(asset_13.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_13)
    table.cell(screener, 0, 14, str.tostring(asset_14.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_14)
    table.cell(screener, 0, 15, str.tostring(asset_15.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_15)
    table.cell(screener, 0, 16, str.tostring(asset_16.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_16)
    table.cell(screener, 0, 17, str.tostring(asset_17.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_17)
    table.cell(screener, 0, 18, str.tostring(asset_18.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_18)
    table.cell(screener, 0, 19, str.tostring(asset_19.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_19)
    table.cell(screener, 0, 20, str.tostring(asset_20.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_20)
//combos
    //Prices
    table.cell(screener, 1, 1,  str.tostring(price_1, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 2,  str.tostring(price_2, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 3,  str.tostring(price_3, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 4,  str.tostring(price_4, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 5,  str.tostring(price_5, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 6,  str.tostring(price_6, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 7,  str.tostring(price_7, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 8,  str.tostring(price_8, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 9,  str.tostring(price_9, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 10,  str.tostring(price_10, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 11,  str.tostring(price_11, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 12,  str.tostring(price_12, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 13,  str.tostring(price_13, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 14,  str.tostring(price_14, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 15,  str.tostring(price_15, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 16,  str.tostring(price_16, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 17,  str.tostring(price_17, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 18,  str.tostring(price_18, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 19,  str.tostring(price_19, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener, 1, 20,  str.tostring(price_20, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    if boolMA1
        table.cell(screener, 2, 1, str.tostring(MA1_1, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 2, str.tostring(MA1_2, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 3, str.tostring(MA1_3, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 4, str.tostring(MA1_4, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 5, str.tostring(MA1_5, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 6, str.tostring(MA1_6, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 7, str.tostring(MA1_7, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 8, str.tostring(MA1_8, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 9, str.tostring(MA1_9, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 10, str.tostring(MA1_10, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 11, str.tostring(MA1_11, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 12, str.tostring(MA1_12, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 13, str.tostring(MA1_13, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 14, str.tostring(MA1_14, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 15, str.tostring(MA1_15, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 16, str.tostring(MA1_16, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 17, str.tostring(MA1_17, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 18, str.tostring(MA1_18, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 19, str.tostring(MA1_19, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 2, 20, str.tostring(MA1_20, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
    if boolMA2
        table.cell(screener, 3, 1, str.tostring(MA2_1, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 2, str.tostring(MA2_2, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 3, str.tostring(MA2_3, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 4, str.tostring(MA2_4, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 5, str.tostring(MA2_5, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 6, str.tostring(MA2_6, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 7, str.tostring(MA2_7, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 8, str.tostring(MA2_8, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 9, str.tostring(MA2_9, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 10, str.tostring(MA2_10, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 11, str.tostring(MA2_11, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 12, str.tostring(MA2_12, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 13, str.tostring(MA2_13, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 14, str.tostring(MA2_14, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 15, str.tostring(MA2_15, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 16, str.tostring(MA2_16, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 17, str.tostring(MA2_17, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 18, str.tostring(MA2_18, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 19, str.tostring(MA2_19, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 3, 20, str.tostring(MA2_20, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    if boolMA3
        table.cell(screener, 4, 1, str.tostring(MA3_1, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 2, str.tostring(MA3_2, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 3, str.tostring(MA3_3, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 4, str.tostring(MA3_4, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 5, str.tostring(MA3_5, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 6, str.tostring(MA3_6, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 7, str.tostring(MA3_7, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 8, str.tostring(MA3_8, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 9, str.tostring(MA3_9, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 10, str.tostring(MA3_10, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 11, str.tostring(MA3_11, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 12, str.tostring(MA3_12, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 13, str.tostring(MA3_13, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 14, str.tostring(MA3_14, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 15, str.tostring(MA3_15, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 16, str.tostring(MA3_16, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 17, str.tostring(MA3_17, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 18, str.tostring(MA3_18, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 19, str.tostring(MA3_19, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 4, 20, str.tostring(MA3_20, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    if boolMG1
        table.cell(screener, 5, 1, str.tostring(MG1_1, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 2, str.tostring(MG1_2, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 3, str.tostring(MG1_3, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 4, str.tostring(MG1_4, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 5, str.tostring(MG1_5, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 6, str.tostring(MG1_6, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 7, str.tostring(MG1_7, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 8, str.tostring(MG1_8, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 9, str.tostring(MG1_9, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 10, str.tostring(MG1_10, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 11, str.tostring(MG1_11, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 12, str.tostring(MG1_12, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 13, str.tostring(MG1_13, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 14, str.tostring(MG1_14, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 15, str.tostring(MG1_15, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 16, str.tostring(MG1_16, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 17, str.tostring(MG1_17, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 18, str.tostring(MG1_18, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 19, str.tostring(MG1_19, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 5, 20, str.tostring(MG1_20, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())

    if boolMG2
        table.cell(screener, 6, 1, str.tostring(MG2_1, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 2, str.tostring(MG2_2, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 3, str.tostring(MG2_3, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 4, str.tostring(MG2_4, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 5, str.tostring(MG2_5, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 6, str.tostring(MG2_6, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 7, str.tostring(MG2_7, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 8, str.tostring(MG2_8, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 9, str.tostring(MG2_9, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 10, str.tostring(MG2_10, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 11, str.tostring(MG2_11, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 12, str.tostring(MG2_12, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 13, str.tostring(MG2_13, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 14, str.tostring(MG2_14, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 15, str.tostring(MG2_15, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 16, str.tostring(MG2_16, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 17, str.tostring(MG2_17, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 18, str.tostring(MG2_18, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 19, str.tostring(MG2_19, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 6, 20, str.tostring(MG2_20, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    if boolMG3
        table.cell(screener, 7, 1, str.tostring(MG3_1, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 2, str.tostring(MG3_2, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 3, str.tostring(MG3_3, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 4, str.tostring(MG3_4, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 5, str.tostring(MG3_5, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 6, str.tostring(MG3_6, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 7, str.tostring(MG3_7, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 8, str.tostring(MG3_8, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 9, str.tostring(MG3_9, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 10, str.tostring(MG3_10, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 11, str.tostring(MG3_11, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 12, str.tostring(MG3_12, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 13, str.tostring(MG3_13, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 14, str.tostring(MG3_14, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 15, str.tostring(MG3_15, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 16, str.tostring(MG3_16, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 17, str.tostring(MG3_17, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 18, str.tostring(MG3_18, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 19, str.tostring(MG3_19, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 7, 20, str.tostring(MG3_20, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    if boolMG4
        table.cell(screener, 8, 1, str.tostring(MG4_1, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 2, str.tostring(MG4_2, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 3, str.tostring(MG4_3, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 4, str.tostring(MG4_4, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 5, str.tostring(MG4_5, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 6, str.tostring(MG4_6, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 7, str.tostring(MG4_7, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 8, str.tostring(MG4_8, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 9, str.tostring(MG4_9, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 10, str.tostring(MG4_10, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 11, str.tostring(MG4_11, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 12, str.tostring(MG4_12, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 13, str.tostring(MG4_13, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 14, str.tostring(MG4_14, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 15, str.tostring(MG4_15, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 16, str.tostring(MG4_16, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 17, str.tostring(MG4_17, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 18, str.tostring(MG4_18, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 19, str.tostring(MG4_19, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 8, 20, str.tostring(MG4_20, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())

    if boolRSI
        table.cell(screener, 9, 1, str.tostring(RSI_1, format.mintick), bgcolor = RSI_1 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 2, str.tostring(RSI_2, format.mintick), bgcolor = RSI_2 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 3, str.tostring(RSI_3, format.mintick), bgcolor = RSI_3 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 4, str.tostring(RSI_4, format.mintick), bgcolor = RSI_4 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 5, str.tostring(RSI_5, format.mintick), bgcolor = RSI_5 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 6, str.tostring(RSI_6, format.mintick), bgcolor = RSI_6 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 7, str.tostring(RSI_7, format.mintick), bgcolor = RSI_7 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 8, str.tostring(RSI_8, format.mintick), bgcolor = RSI_8 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 9, str.tostring(RSI_9, format.mintick), bgcolor = RSI_9 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 10, str.tostring(RSI_10, format.mintick), bgcolor = RSI_10 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 11, str.tostring(RSI_11, format.mintick), bgcolor = RSI_11 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 12, str.tostring(RSI_12, format.mintick), bgcolor = RSI_12 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 13, str.tostring(RSI_13, format.mintick), bgcolor = RSI_13 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 14, str.tostring(RSI_14, format.mintick), bgcolor = RSI_14 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 15, str.tostring(RSI_15, format.mintick), bgcolor = RSI_15 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 16, str.tostring(RSI_16, format.mintick), bgcolor = RSI_16 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 17, str.tostring(RSI_17, format.mintick), bgcolor = RSI_17 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 18, str.tostring(RSI_18, format.mintick), bgcolor = RSI_18 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 19, str.tostring(RSI_19, format.mintick), bgcolor = RSI_19 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 9, 20, str.tostring(RSI_20, format.mintick), bgcolor = RSI_20 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())

    if boolMACD
        table.cell(screener, 10, 1, str.tostring(MACD_1, format.mintick), bgcolor = MACD_1 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 2, str.tostring(MACD_2, format.mintick), bgcolor = MACD_2 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 3, str.tostring(MACD_3, format.mintick), bgcolor = MACD_3 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 4, str.tostring(MACD_4, format.mintick), bgcolor = MACD_4 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 5, str.tostring(MACD_5, format.mintick), bgcolor = MACD_5 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 6, str.tostring(MACD_6, format.mintick), bgcolor = MACD_6 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 7, str.tostring(MACD_7, format.mintick), bgcolor = MACD_7 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 8, str.tostring(MACD_8, format.mintick), bgcolor = MACD_8 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 9, str.tostring(MACD_9, format.mintick), bgcolor = MACD_9 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 10, str.tostring(MACD_10, format.mintick), bgcolor = MACD_10 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 11, str.tostring(MACD_11, format.mintick), bgcolor = MACD_11 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 12, str.tostring(MACD_12, format.mintick), bgcolor = MACD_12 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 13, str.tostring(MACD_13, format.mintick), bgcolor = MACD_13 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 14, str.tostring(MACD_14, format.mintick), bgcolor = MACD_14 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 15, str.tostring(MACD_15, format.mintick), bgcolor = MACD_15 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 16, str.tostring(MACD_16, format.mintick), bgcolor = MACD_16 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 17, str.tostring(MACD_17, format.mintick), bgcolor = MACD_17 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 18, str.tostring(MACD_18, format.mintick), bgcolor = MACD_18 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 19, str.tostring(MACD_19, format.mintick), bgcolor = MACD_19 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener, 10, 20, str.tostring(MACD_20, format.mintick), bgcolor = MACD_20 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
// plot the table 2
if barstate.islast and showTable2
//headers
    table.cell(screener2, 0, 0, 'Symbol', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = tableBgColor)
    table.cell(screener2, 1, 0, 'Price', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = tableBgColor)
    if boolMA1
        table.cell(screener2, 2, 0, 'MA1', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = color.lime)
    if boolMA2
        table.cell(screener2, 3, 0, 'MA2', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = color.orange)
    if boolMA3
        table.cell(screener2, 4, 0, 'MA3', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = color.red)
    if boolMG1    
        table.cell(screener2, 5, 0, 'MG1', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = color.rgb(102, 98, 98))
    if boolMG2
        table.cell(screener2, 6, 0, 'MG2', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = color.red)
    if boolMG3
        table.cell(screener2, 7, 0, 'MG3', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = color.orange)
    if boolMG4
        table.cell(screener2, 8, 0, 'MG4', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = color.purple)
    if boolRSI
        table.cell(screener2, 9, 0, 'RSI', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = tableBgColor)
    if boolMACD
        table.cell(screener2, 10, 0, 'MACD', text_color = tableHeaderColor, text_size = tableTextSize.textsize(), width = 3, bgcolor = tableBgColor)
// symbols
    table.cell(screener2, 0, 1, str.tostring(asset_21.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_21)
    table.cell(screener2, 0, 2, str.tostring(asset_22.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_22)
    table.cell(screener2, 0, 3, str.tostring(asset_23.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_23)
    table.cell(screener2, 0, 4, str.tostring(asset_24.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_24)
    table.cell(screener2, 0, 5, str.tostring(asset_25.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_25)
    table.cell(screener2, 0, 6, str.tostring(asset_26.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_26)
    table.cell(screener2, 0, 7, str.tostring(asset_27.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_27)
    table.cell(screener2, 0, 8, str.tostring(asset_28.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_28)
    table.cell(screener2, 0, 9, str.tostring(asset_29.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_29)
    table.cell(screener2, 0, 10, str.tostring(asset_30.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_30)
    table.cell(screener2, 0, 11, str.tostring(asset_31.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_31)
    table.cell(screener2, 0, 12, str.tostring(asset_32.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_32)
    table.cell(screener2, 0, 13, str.tostring(asset_33.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_33)
    table.cell(screener2, 0, 14, str.tostring(asset_34.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_34)
    table.cell(screener2, 0, 15, str.tostring(asset_35.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_35)
    table.cell(screener2, 0, 16, str.tostring(asset_36.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_36)
    table.cell(screener2, 0, 17, str.tostring(asset_37.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_37)
    table.cell(screener2, 0, 18, str.tostring(asset_38.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_38)
    table.cell(screener2, 0, 19, str.tostring(asset_39.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_39)
    table.cell(screener2, 0, 20, str.tostring(asset_40.splitter()), text_color = tableHeaderColor, text_size = tableTextSize.textsize(), bgcolor = mgrenk_40)
//combos
    //Prices
    table.cell(screener2, 1, 1,  str.tostring(price_21, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 2,  str.tostring(price_22, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 3,  str.tostring(price_23, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 4,  str.tostring(price_24, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 5,  str.tostring(price_25, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 6,  str.tostring(price_26, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 7,  str.tostring(price_27, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 8,  str.tostring(price_28, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 9,  str.tostring(price_29, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 10,  str.tostring(price_30, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 11,  str.tostring(price_31, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 12,  str.tostring(price_32, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 13,  str.tostring(price_33, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 14,  str.tostring(price_34, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 15,  str.tostring(price_35, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 16,  str.tostring(price_36, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 17,  str.tostring(price_37, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 18,  str.tostring(price_38, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 19,  str.tostring(price_39, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    table.cell(screener2, 1, 20,  str.tostring(price_40, format.mintick), bgcolor = na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    if boolMA1
        table.cell(screener2, 2, 1, str.tostring(MA1_21, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 2, str.tostring(MA1_22, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 3, str.tostring(MA1_23, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 4, str.tostring(MA1_24, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 5, str.tostring(MA1_25, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 6, str.tostring(MA1_26, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 7, str.tostring(MA1_27, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 8, str.tostring(MA1_28, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 9, str.tostring(MA1_29, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 10, str.tostring(MA1_30, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 11, str.tostring(MA1_31, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 12, str.tostring(MA1_32, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 13, str.tostring(MA1_33, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 14, str.tostring(MA1_34, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 15, str.tostring(MA1_35, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 16, str.tostring(MA1_36, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 17, str.tostring(MA1_37, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 18, str.tostring(MA1_38, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 19, str.tostring(MA1_39, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 2, 20, str.tostring(MA1_40, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
    if boolMA2
        table.cell(screener2, 3, 1, str.tostring(MA2_21, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 2, str.tostring(MA2_22, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 3, str.tostring(MA2_23, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 4, str.tostring(MA2_24, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 5, str.tostring(MA2_25, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 6, str.tostring(MA2_26, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 7, str.tostring(MA2_27, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 8, str.tostring(MA2_28, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 9, str.tostring(MA2_29, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 10, str.tostring(MA2_30, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 11, str.tostring(MA2_31, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 12, str.tostring(MA2_32, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 13, str.tostring(MA2_33, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 14, str.tostring(MA2_34, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 15, str.tostring(MA2_35, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 16, str.tostring(MA2_36, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 17, str.tostring(MA2_37, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 18, str.tostring(MA2_38, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 19, str.tostring(MA2_39, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 3, 20, str.tostring(MA2_40, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
    if boolMA3
        table.cell(screener2, 4, 1, str.tostring(MA3_21, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 2, str.tostring(MA3_22, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 3, str.tostring(MA3_23, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 4, str.tostring(MA3_24, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 5, str.tostring(MA3_25, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 6, str.tostring(MA3_26, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 7, str.tostring(MA3_27, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 8, str.tostring(MA3_28, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 9, str.tostring(MA3_29, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 10, str.tostring(MA3_30, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 11, str.tostring(MA3_31, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 12, str.tostring(MA3_32, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 13, str.tostring(MA3_33, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 14, str.tostring(MA3_34, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 15, str.tostring(MA3_35, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 16, str.tostring(MA3_36, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 17, str.tostring(MA3_37, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 18, str.tostring(MA3_38, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 19, str.tostring(MA3_39, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 4, 20, str.tostring(MA3_40, format.mintick), bgcolor = na , text_color = tableTextColor, text_size = tableTextSize.textsize())
    if boolMG1
        table.cell(screener2, 5, 1, str.tostring(MG1_21, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 2, str.tostring(MG1_22, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 3, str.tostring(MG1_23, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 4, str.tostring(MG1_24, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 5, str.tostring(MG1_25, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 6, str.tostring(MG1_26, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 7, str.tostring(MG1_27, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 8, str.tostring(MG1_28, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 9, str.tostring(MG1_29, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 10, str.tostring(MG1_30, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 11, str.tostring(MG1_31, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 12, str.tostring(MG1_32, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 13, str.tostring(MG1_33, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 14, str.tostring(MG1_34, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 15, str.tostring(MG1_35, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 16, str.tostring(MG1_36, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 17, str.tostring(MG1_37, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 18, str.tostring(MG1_38, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 19, str.tostring(MG1_39, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 5, 20, str.tostring(MG1_40, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())

    if boolMG2
        table.cell(screener2, 6, 1, str.tostring(MG2_21, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 2, str.tostring(MG2_22, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 3, str.tostring(MG2_23, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 4, str.tostring(MG2_24, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 5, str.tostring(MG2_25, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 6, str.tostring(MG2_26, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 7, str.tostring(MG2_27, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 8, str.tostring(MG2_28, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 9, str.tostring(MG2_29, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 10, str.tostring(MG2_30, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 11, str.tostring(MG2_31, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 12, str.tostring(MG2_32, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 13, str.tostring(MG2_33, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 14, str.tostring(MG2_34, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 15, str.tostring(MG2_35, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 16, str.tostring(MG2_36, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 17, str.tostring(MG2_37, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 18, str.tostring(MG2_38, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 19, str.tostring(MG2_39, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 6, 20, str.tostring(MG2_40, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    if boolMG3
        table.cell(screener2, 7, 1, str.tostring(MG3_21, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 2, str.tostring(MG3_22, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 3, str.tostring(MG3_23, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 4, str.tostring(MG3_24, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 5, str.tostring(MG3_25, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 6, str.tostring(MG3_26, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 7, str.tostring(MG3_27, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 8, str.tostring(MG3_28, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 9, str.tostring(MG3_29, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 10, str.tostring(MG3_30, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 11, str.tostring(MG3_31, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 12, str.tostring(MG3_32, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 13, str.tostring(MG3_33, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 14, str.tostring(MG3_34, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 15, str.tostring(MG3_35, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 16, str.tostring(MG3_36, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 17, str.tostring(MG3_37, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 18, str.tostring(MG3_38, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 19, str.tostring(MG3_39, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 7, 20, str.tostring(MG3_40, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
    if boolMG4
        table.cell(screener2, 8, 1, str.tostring(MG4_21, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 2, str.tostring(MG4_22, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 3, str.tostring(MG4_23, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 4, str.tostring(MG4_24, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 5, str.tostring(MG4_25, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 6, str.tostring(MG4_26, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 7, str.tostring(MG4_27, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 8, str.tostring(MG4_28, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 9, str.tostring(MG4_29, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 10, str.tostring(MG4_30, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 11, str.tostring(MG4_31, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 12, str.tostring(MG4_32, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 13, str.tostring(MG4_33, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 14, str.tostring(MG4_34, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 15, str.tostring(MG4_35, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 16, str.tostring(MG4_36, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 17, str.tostring(MG4_37, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 18, str.tostring(MG4_38, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 19, str.tostring(MG4_39, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 8, 20, str.tostring(MG4_40, format.mintick), na, text_color = tableTextColor, text_size = tableTextSize.textsize())

    if boolRSI
        table.cell(screener2, 9, 1, str.tostring(RSI_21, format.mintick), bgcolor = RSI_21 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 2, str.tostring(RSI_22, format.mintick), bgcolor = RSI_22 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 3, str.tostring(RSI_23, format.mintick), bgcolor = RSI_23 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 4, str.tostring(RSI_24, format.mintick), bgcolor = RSI_24 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 5, str.tostring(RSI_25, format.mintick), bgcolor = RSI_25 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 6, str.tostring(RSI_26, format.mintick), bgcolor = RSI_26 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 7, str.tostring(RSI_27, format.mintick), bgcolor = RSI_27 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 8, str.tostring(RSI_28, format.mintick), bgcolor = RSI_28 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 9, str.tostring(RSI_29, format.mintick), bgcolor = RSI_29 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 10, str.tostring(RSI_30, format.mintick), bgcolor = RSI_30 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 11, str.tostring(RSI_31, format.mintick), bgcolor = RSI_31 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 12, str.tostring(RSI_32, format.mintick), bgcolor = RSI_32 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 13, str.tostring(RSI_33, format.mintick), bgcolor = RSI_33 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 14, str.tostring(RSI_34, format.mintick), bgcolor = RSI_34 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 15, str.tostring(RSI_35, format.mintick), bgcolor = RSI_35 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 16, str.tostring(RSI_36, format.mintick), bgcolor = RSI_36 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 17, str.tostring(RSI_37, format.mintick), bgcolor = RSI_37 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 18, str.tostring(RSI_38, format.mintick), bgcolor = RSI_38 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 19, str.tostring(RSI_39, format.mintick), bgcolor = RSI_39 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 9, 20, str.tostring(RSI_40, format.mintick), bgcolor = RSI_40 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())

    if boolMACD
        table.cell(screener2, 10, 1, str.tostring(MACD_21, format.mintick), bgcolor = MACD_21 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 2, str.tostring(MACD_22, format.mintick), bgcolor = MACD_22 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 3, str.tostring(MACD_23, format.mintick), bgcolor = MACD_23 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 4, str.tostring(MACD_24, format.mintick), bgcolor = MACD_24 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 5, str.tostring(MACD_25, format.mintick), bgcolor = MACD_25 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 6, str.tostring(MACD_26, format.mintick), bgcolor = MACD_26 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 7, str.tostring(MACD_27, format.mintick), bgcolor = MACD_27 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 8, str.tostring(MACD_28, format.mintick), bgcolor = MACD_28 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 9, str.tostring(MACD_29, format.mintick), bgcolor = MACD_29 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 10, str.tostring(MACD_30, format.mintick), bgcolor = MACD_30 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 11, str.tostring(MACD_31, format.mintick), bgcolor = MACD_31 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 12, str.tostring(MACD_32, format.mintick), bgcolor = MACD_32 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 13, str.tostring(MACD_33, format.mintick), bgcolor = MACD_33 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 14, str.tostring(MACD_34, format.mintick), bgcolor = MACD_34 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 15, str.tostring(MACD_35, format.mintick), bgcolor = MACD_35 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 16, str.tostring(MACD_36, format.mintick), bgcolor = MACD_36 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 17, str.tostring(MACD_37, format.mintick), bgcolor = MACD_37 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 18, str.tostring(MACD_38, format.mintick), bgcolor = MACD_38 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 19, str.tostring(MACD_39, format.mintick), bgcolor = MACD_39 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
        table.cell(screener2, 10, 20, str.tostring(MACD_40, format.mintick), bgcolor = MACD_40 == 1 ? color.lime : color.red, text_color = tableTextColor, text_size = tableTextSize.textsize())
